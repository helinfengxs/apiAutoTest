- config:
    #   测试名称，用于测试报告标题
    name: 接口测试
    #   全局参数
    variables:
      
      {
          HeaccountNo: "test_he_001",
          roleCode: "admin-001",
          tenantCode: "yixi001",
          accountName: "s06msstvto",
          password: "9GPeN0kcS4j3Gn7e",
          testName_1: "Cxtest002",
          poiid: "test",
          empNo: "helinfeng159",
          clientRelTenant: "hetest@123",
          roleCode_perm: "admin1",
          tenantCode_perm: "System",
          accountName_perm: "bUZRbyD6hX",
          password_perm: "tJu4pbehKFuDd9PaW02O",
          testName_perm: "Cxtest002"
      }
    #   测试用例公共请求信息
    request:
      #项目url
#      base_url: https://api-dev.deepeleph.com
      base_url: http://localhost:8888


- BaiduCases:
    - common:
        request:
          url: "/test/hello"
          method: "post"
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "name": "xiao",
            "age": 20
          }
    #用例方法名称
    - openBaidu:
        #用例名称
        name: "正确账号登录用例"
        #请求内容
        request:
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 2000]
#模块名称 :修改角色
- RoleUpdateCases:
    - common:
        request:
          url: /user/center/v1/role/update
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交 }
          json: {
            "requestId": ,
            "token": $token,
            "tenantCode": $tenantCode,
            "roleCode": $roleCode,
            "roleName": "修改管理员1",
            "perms": [ "perm_manager", "perm_query" ]
          }
    - roleUpdate:
        #用例名称
        name: "修改角色"
        request:

          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract: {

          }
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
    - missToken:
        name: "token不传入"
        request:
          json: {
            "@token": "",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,400 ]
    - missTenantCode:
        name: "tenantCode不传入"
        request:
          json: {
            "@tenantCode": "",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,400 ]
    - missRoleCode:
        name: "roleCode不传入"
        request:
          json: {
            "@roleCode": "",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,3 ]
    - missRoleName:
        name: "roleName不传入"
        request:
          json: {
            "@roleName": "",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,3 ]
    - tenantCodeIsError:
        name: "传入错误的租户编码，更新角色"
        request:
          json: {
            "tenantCode": "isError2021",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,3 ]
    - roleCodeIsError:
        name: "传入错误的角色编码，更新角色"
        request:
          json: {
            "roleCode": "isErrorCode2021",
          }
          extract: {
            requestId: requestId
          }
          validate:
            - eq: [ success,false ]
            - eq: [ code,3 ]


